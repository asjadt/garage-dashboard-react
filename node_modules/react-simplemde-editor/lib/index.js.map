{"version":3,"sources":["../src/index.tsx"],"names":["noop","_id","generateId","SimpleMDEEditor","props","keyChange","state","value","id","simpleMde","editorEl","editorToolbarEl","imageUploadFunction","file","onSuccess","onError","imageUpload","options","_onSuccess","url","eventWrapper","createEditor","SimpleMDE","require","initialOptions","element","document","getElementById","initialValue","undefined","allOptions","Object","assign","setState","onChange","removeEvents","removeEventListener","addEvents","elementWrapperRef","getElementsByClassName","addEventListener","codemirror","on","getCursor","events","entries","forEach","eventName","callback","getLineAndCursor","getDoc","getMdeInstance","addExtraKeys","extraKeys","setOption","getOption","setElementWrapperRef","window","prevProps","children","label","rest","React","PureComponent","defaultProps"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport * as SimpleMDE from \"easymde\";\nimport { KeyMap, DOMEvent, Editor } from \"codemirror\";\n\nconst noop = () => {};\nlet _id = 0;\n\nconst generateId = () => `simplemde-editor-${++_id}`;\n\ntype CodemirrorEvents =\n  | \"change\"\n  | \"changes\"\n  | \"beforeChange\"\n  | \"cursorActivity\"\n  | \"beforeSelectionChange\"\n  | \"viewportChange\"\n  | \"gutterClick\"\n  | \"focus\"\n  | \"blur\"\n  | \"scroll\"\n  | \"update\"\n  | \"renderLine\";\n\ntype SimpleMdeToCodemirror = {\n  [E in CodemirrorEvents | DOMEvent]?: Editor[\"on\"]\n};\n\nexport interface SimpleMDEEditorProps {\n  id?: string;\n  label?: string;\n  onChange: (value: string) => void | any;\n  value?: string;\n  className?: string;\n  extraKeys?: KeyMap;\n  options?: SimpleMDE.Options;\n  events?: SimpleMdeToCodemirror;\n  getMdeInstance?: (instance: SimpleMDE) => void | any;\n  getLineAndCursor?: (position: CodeMirror.Position) => void | any;\n}\n\ntype SimpleMDEEditorState = {\n  value: string;\n};\n\nexport default class SimpleMDEEditor extends React.PureComponent<\n  SimpleMDEEditorProps,\n  SimpleMDEEditorState\n> {\n  private elementWrapperRef: HTMLDivElement | null;\n  private setElementWrapperRef: (element: HTMLDivElement) => void;\n  private keyChange = false;\n\n  static defaultProps = {\n    events: {},\n    onChange: noop,\n    options: {}\n  };\n\n  state = {\n    value: this.props.value || \"\"\n  };\n\n  id = this.props.id ? this.props.id : generateId();\n  simpleMde: SimpleMDE | null = null;\n  editorEl: HTMLDivElement | null = null;\n  editorToolbarEl: Element | null = null;\n\n  constructor(props: SimpleMDEEditorProps) {\n    super(props);\n    this.elementWrapperRef = null;\n    this.setElementWrapperRef = (element: HTMLDivElement) => {\n      this.elementWrapperRef = element;\n    };\n  }\n\n  componentDidMount() {\n    if (typeof window !== undefined) {\n      this.createEditor();\n      this.addEvents();\n      this.addExtraKeys();\n      this.getCursor();\n      this.getMdeInstance();\n    }\n  }\n\n  componentDidUpdate(prevProps: SimpleMDEEditorProps) {\n    if (\n      !this.keyChange &&\n      this.props.value !== this.state.value && // This is somehow fixes moving cursor for controlled case\n      this.props.value !== prevProps.value // This one fixes no value change for uncontrolled input. If it's uncontrolled prevProps will be the same\n    ) {\n      this.simpleMde!.value(this.props.value || \"\");\n    }\n    this.keyChange = false;\n  }\n\n  componentWillUnmount() {\n    if (this.editorEl !== null && this.editorEl !== undefined) {\n      this.removeEvents();\n    }\n  }\n\n  // image upload function\n  imageUploadFunction = (file: File, onSuccess: (url: string) => void, onError: (error: string) => void) => {\n    const imageUpload = this.props.options?.imageUploadFunction\n    if (imageUpload) {\n        const _onSuccess = (url: string) => {\n            onSuccess(url)\n            // update value when success\n            this.eventWrapper()\n        }\n        imageUpload(file, _onSuccess, onError)\n    }\n}\n\n  createEditor = () => {\n    const SimpleMDE = require(\"easymde\");\n    const initialOptions = {\n      element: document.getElementById(this.id),\n      initialValue: this.props.value\n    };\n\n    const imageUploadFunction = this.props.options?.imageUploadFunction ? this.imageUploadFunction : undefined\n    const allOptions = Object.assign({}, initialOptions, this.props.options, { imageUploadFunction });\n    this.simpleMde = new SimpleMDE(allOptions);\n  };\n\n  eventWrapper = () => {\n    this.keyChange = true;\n    this.setState({\n      value: this.simpleMde!.value()\n    });\n    this.props.onChange(this.simpleMde!.value());\n  };\n\n  removeEvents = () => {\n    if (this.editorEl && this.editorToolbarEl) {\n      this.editorEl.removeEventListener(\"keyup\", this.eventWrapper);\n      this.editorEl.removeEventListener(\"paste\", this.eventWrapper);\n      this.editorToolbarEl.removeEventListener(\"click\", this.eventWrapper);\n    }\n  };\n\n  addEvents = () => {\n    if (this.elementWrapperRef && this.simpleMde) {\n      this.editorEl = this.elementWrapperRef;\n      this.editorToolbarEl = this.elementWrapperRef.getElementsByClassName(\n        \"editor-toolbar\"\n      )[0];\n\n      this.editorEl.addEventListener(\"keyup\", this.eventWrapper);\n      this.editorEl.addEventListener(\"paste\", this.eventWrapper);\n      this.editorToolbarEl &&\n        this.editorToolbarEl.addEventListener(\"click\", this.eventWrapper);\n\n      this.simpleMde.codemirror.on(\"change\", this.eventWrapper);\n      this.simpleMde.codemirror.on(\"cursorActivity\", this.getCursor);\n\n      const { events } = this.props;\n\n      // Handle custom events\n      events &&\n        Object.entries(events).forEach(([eventName, callback]) => {\n          if (eventName && callback) {\n            this.simpleMde &&\n              this.simpleMde.codemirror.on(\n                eventName as DOMEvent,\n                callback as any\n              );\n          }\n        });\n    }\n  };\n\n  getCursor = () => {\n    // https://codemirror.net/doc/manual.html#api_selection\n    if (this.props.getLineAndCursor) {\n      this.props.getLineAndCursor(\n        this.simpleMde!.codemirror.getDoc().getCursor()\n      );\n    }\n  };\n\n  getMdeInstance = () => {\n    if (this.props.getMdeInstance) {\n      this.props.getMdeInstance(this.simpleMde!);\n    }\n  };\n\n  addExtraKeys = () => {\n    // https://codemirror.net/doc/manual.html#option_extraKeys\n    if (this.props.extraKeys) {\n      this.simpleMde!.codemirror.setOption(\"extraKeys\", Object.assign(\n        {},\n        this.props.extraKeys,\n        this.simpleMde!.codemirror.getOption(\"extraKeys\")\n      ));\n    }\n  };\n\n  render() {\n    const {\n      events,\n      value,\n      options,\n      children,\n      extraKeys,\n      getLineAndCursor,\n      getMdeInstance,\n      label,\n      onChange,\n      id,\n      ...rest\n    } = this.props;\n    return (\n      <div id={`${this.id}-wrapper`} {...rest} ref={this.setElementWrapperRef}>\n        {label && <label htmlFor={this.id}> {label} </label>}\n        <textarea id={this.id} />\n      </div>\n    );\n  }\n}\n"],"file":"index.js"}