{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"labelKey\", \"newSelectionPrefix\", \"options\", \"paginationText\", \"renderMenuItemChildren\", \"text\"];\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Highlighter from './Highlighter';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport { getOptionLabel, getOptionProperty } from '../utils';\nvar propTypes = {\n  /**\n   * Provides the ability to specify a prefix before the user-entered text to\n   * indicate that the selection will be new. No-op unless `allowNew={true}`.\n   */\n  newSelectionPrefix: PropTypes.node,\n  /**\n   * Prompt displayed when large data sets are paginated.\n   */\n  paginationText: PropTypes.node,\n  /**\n   * Provides a hook for customized rendering of menu item contents.\n   */\n  renderMenuItemChildren: PropTypes.func\n};\nvar defaultProps = {\n  newSelectionPrefix: 'New selection: ',\n  paginationText: 'Display additional results...',\n  renderMenuItemChildren: function renderMenuItemChildren(option, props, idx) {\n    return /*#__PURE__*/React.createElement(Highlighter, {\n      search: props.text\n    }, getOptionLabel(option, props.labelKey));\n  }\n};\nvar TypeaheadMenu = function TypeaheadMenu(props) {\n  var labelKey = props.labelKey,\n    newSelectionPrefix = props.newSelectionPrefix,\n    options = props.options,\n    paginationText = props.paginationText,\n    renderMenuItemChildren = props.renderMenuItemChildren,\n    text = props.text,\n    menuProps = _objectWithoutProperties(props, _excluded);\n  var renderMenuItem = function renderMenuItem(option, position) {\n    var label = getOptionLabel(option, labelKey);\n    var menuItemProps = {\n      disabled: getOptionProperty(option, 'disabled'),\n      label: label,\n      option: option,\n      position: position\n    };\n    if (option.customOption) {\n      return /*#__PURE__*/React.createElement(MenuItem, _extends({}, menuItemProps, {\n        className: \"rbt-menu-custom-option\",\n        key: position,\n        label: label\n      }), newSelectionPrefix, /*#__PURE__*/React.createElement(Highlighter, {\n        search: text\n      }, label));\n    }\n    if (option.paginationOption) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        key: \"pagination-item\"\n      }, /*#__PURE__*/React.createElement(Menu.Divider, null), /*#__PURE__*/React.createElement(MenuItem, _extends({}, menuItemProps, {\n        className: \"rbt-menu-pagination-option\",\n        label: paginationText\n      }), paginationText));\n    }\n    return /*#__PURE__*/React.createElement(MenuItem, _extends({}, menuItemProps, {\n      key: position\n    }), renderMenuItemChildren(option, props, position));\n  };\n  return /*#__PURE__*/(\n    // Explictly pass `text` so Flow doesn't complain...\n    React.createElement(Menu, _extends({}, menuProps, {\n      text: text\n    }), options.map(renderMenuItem))\n  );\n};\nTypeaheadMenu.propTypes = propTypes;\nTypeaheadMenu.defaultProps = defaultProps;\nexport default TypeaheadMenu;","map":{"version":3,"names":["_extends","_objectWithoutProperties","_excluded","React","Fragment","PropTypes","Highlighter","Menu","MenuItem","getOptionLabel","getOptionProperty","propTypes","newSelectionPrefix","node","paginationText","renderMenuItemChildren","func","defaultProps","option","props","idx","createElement","search","text","labelKey","TypeaheadMenu","options","menuProps","renderMenuItem","position","label","menuItemProps","disabled","customOption","className","key","paginationOption","Divider","map"],"sources":["/home/rifat/uk client/garage/garage-frontend-2/theme/node_modules/react-bootstrap-typeahead/es/components/TypeaheadMenu.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"labelKey\", \"newSelectionPrefix\", \"options\", \"paginationText\", \"renderMenuItemChildren\", \"text\"];\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Highlighter from './Highlighter';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport { getOptionLabel, getOptionProperty } from '../utils';\nvar propTypes = {\n  /**\n   * Provides the ability to specify a prefix before the user-entered text to\n   * indicate that the selection will be new. No-op unless `allowNew={true}`.\n   */\n  newSelectionPrefix: PropTypes.node,\n\n  /**\n   * Prompt displayed when large data sets are paginated.\n   */\n  paginationText: PropTypes.node,\n\n  /**\n   * Provides a hook for customized rendering of menu item contents.\n   */\n  renderMenuItemChildren: PropTypes.func\n};\nvar defaultProps = {\n  newSelectionPrefix: 'New selection: ',\n  paginationText: 'Display additional results...',\n  renderMenuItemChildren: function renderMenuItemChildren(option, props, idx) {\n    return /*#__PURE__*/React.createElement(Highlighter, {\n      search: props.text\n    }, getOptionLabel(option, props.labelKey));\n  }\n};\n\nvar TypeaheadMenu = function TypeaheadMenu(props) {\n  var labelKey = props.labelKey,\n      newSelectionPrefix = props.newSelectionPrefix,\n      options = props.options,\n      paginationText = props.paginationText,\n      renderMenuItemChildren = props.renderMenuItemChildren,\n      text = props.text,\n      menuProps = _objectWithoutProperties(props, _excluded);\n\n  var renderMenuItem = function renderMenuItem(option, position) {\n    var label = getOptionLabel(option, labelKey);\n    var menuItemProps = {\n      disabled: getOptionProperty(option, 'disabled'),\n      label: label,\n      option: option,\n      position: position\n    };\n\n    if (option.customOption) {\n      return /*#__PURE__*/React.createElement(MenuItem, _extends({}, menuItemProps, {\n        className: \"rbt-menu-custom-option\",\n        key: position,\n        label: label\n      }), newSelectionPrefix, /*#__PURE__*/React.createElement(Highlighter, {\n        search: text\n      }, label));\n    }\n\n    if (option.paginationOption) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        key: \"pagination-item\"\n      }, /*#__PURE__*/React.createElement(Menu.Divider, null), /*#__PURE__*/React.createElement(MenuItem, _extends({}, menuItemProps, {\n        className: \"rbt-menu-pagination-option\",\n        label: paginationText\n      }), paginationText));\n    }\n\n    return /*#__PURE__*/React.createElement(MenuItem, _extends({}, menuItemProps, {\n      key: position\n    }), renderMenuItemChildren(option, props, position));\n  };\n\n  return (\n    /*#__PURE__*/\n    // Explictly pass `text` so Flow doesn't complain...\n    React.createElement(Menu, _extends({}, menuProps, {\n      text: text\n    }), options.map(renderMenuItem))\n  );\n};\n\nTypeaheadMenu.propTypes = propTypes;\nTypeaheadMenu.defaultProps = defaultProps;\nexport default TypeaheadMenu;"],"mappings":"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"},"metadata":{},"sourceType":"module"}