{"ast":null,"code":"var _jsxFileName = \"/home/rifat/uk client/garage/garage-frontend-2/theme/src/components/advance/Imagecrop.js\";\nimport React, { Fragment, useState, useRef, useCallback } from 'react';\nimport BreadCrumb from '../../layout/Breadcrumb';\nimport { Container, Card, CardHeader, CardBody, Row, Col } from 'reactstrap';\nimport ReactCrop from 'react-image-crop';\nimport { ImageCropper } from '../../constant';\nconst Imagecropper = props => {\n  const [upImg, setUpImg] = useState();\n  const imgRef = useRef(null);\n  const [crop, setCrop] = useState({\n    unit: '%',\n    width: 30,\n    aspect: 16 / 9\n  });\n  const [previewUrl, setPreviewUrl] = useState();\n  const onSelectFile = e => {\n    if (e.target.files && e.target.files.length > 0) {\n      const reader = new FileReader();\n      reader.addEventListener('load', () => setUpImg(reader.result));\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  };\n  const onLoad = useCallback(img => {\n    imgRef.current = img;\n  }, []);\n  const makeClientCrop = async crop => {\n    if (imgRef.current && crop.width && crop.height) {\n      createCropPreview(imgRef.current, crop, 'newFile.jpeg');\n    }\n  };\n  const createCropPreview = async (image, crop, fileName) => {\n    const canvas = document.createElement('canvas');\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(image, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width, crop.height);\n    return new Promise((resolve, reject) => {\n      canvas.toBlob(blob => {\n        if (!blob) {\n          reject(new Error('Canvas is empty'));\n          return;\n        }\n        blob.name = fileName;\n        window.URL.revokeObjectURL(previewUrl);\n        setPreviewUrl(window.URL.createObjectURL(blob));\n      }, 'image/jpeg');\n    });\n  };\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BreadCrumb, {\n    parent: \"Home\",\n    subparent: \"Advance\",\n    title: \"Image Cropper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, ImageCropper)), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-cropper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: onSelectFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(ReactCrop, {\n    src: upImg,\n    onImageLoaded: onLoad,\n    crop: crop,\n    onChange: c => setCrop(c),\n    onComplete: makeClientCrop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }), previewUrl && /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"Crop preview\",\n    src: previewUrl,\n    style: {\n      maxWidth: \"100%\"\n    },\n    className: \"crop-portion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 30\n    }\n  })))))));\n};\nexport default Imagecropper;","map":{"version":3,"names":["React","Fragment","useState","useRef","useCallback","BreadCrumb","Container","Card","CardHeader","CardBody","Row","Col","ReactCrop","ImageCropper","Imagecropper","props","upImg","setUpImg","imgRef","crop","setCrop","unit","width","aspect","previewUrl","setPreviewUrl","onSelectFile","e","target","files","length","reader","FileReader","addEventListener","result","readAsDataURL","onLoad","img","current","makeClientCrop","height","createCropPreview","image","fileName","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","drawImage","x","y","Promise","resolve","reject","toBlob","blob","Error","name","window","URL","revokeObjectURL","createObjectURL","c","maxWidth"],"sources":["/home/rifat/uk client/garage/garage-frontend-2/theme/src/components/advance/Imagecrop.js"],"sourcesContent":["import React, { Fragment,useState,useRef,useCallback } from 'react';\nimport BreadCrumb from '../../layout/Breadcrumb'\nimport {Container,Card,CardHeader,CardBody, Row, Col} from 'reactstrap'\nimport ReactCrop from 'react-image-crop';\nimport {ImageCropper} from '../../constant'\nconst Imagecropper = (props)  => {\n  const [upImg, setUpImg] = useState();\n  const imgRef = useRef(null);\n  const [crop, setCrop] = useState({ unit: '%', width: 30, aspect: 16 / 9 });\n  const [previewUrl, setPreviewUrl] = useState();\n\n  const onSelectFile = e => {\n    if (e.target.files && e.target.files.length > 0) {\n      const reader = new FileReader();\n      reader.addEventListener('load', () => setUpImg(reader.result));\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  };\n\n  const onLoad = useCallback(img => {\n    imgRef.current = img;\n  }, []);\n\n  const makeClientCrop = async crop => {\n    if (imgRef.current && crop.width && crop.height) {\n      createCropPreview(imgRef.current, crop, 'newFile.jpeg');\n    }\n  };\n\n  const createCropPreview = async (image, crop, fileName) => {\n    const canvas = document.createElement('canvas');\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    const ctx = canvas.getContext('2d');\n\n    ctx.drawImage(\n      image,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      crop.width,\n      crop.height\n    );\n\n    return new Promise((resolve, reject) => {\n      canvas.toBlob(blob => {\n        if (!blob) {\n          reject(new Error('Canvas is empty'));\n          return;\n        }\n        blob.name = fileName;\n        window.URL.revokeObjectURL(previewUrl);\n        setPreviewUrl(window.URL.createObjectURL(blob));\n      }, 'image/jpeg');\n    });\n  };\n\n  return (\n    <Fragment>\n    <BreadCrumb parent=\"Home\" subparent=\"Advance\" title=\"Image Cropper\"/>\n    <Container fluid={true}>\n      <Row>\n        <Col>\n        <Card>\n          <CardHeader>\n              <h5>{ImageCropper}</h5>\n          </CardHeader>\n          <CardBody>\n              <div className=\"input-cropper\">\n                  <input type=\"file\" onChange={onSelectFile} />\n              </div>\n              <ReactCrop\n                src={upImg}\n                onImageLoaded={onLoad}\n                crop={crop}\n                onChange={c => setCrop(c)}\n                onComplete={makeClientCrop}\n              />\n              {previewUrl && <img alt=\"Crop preview\" src={previewUrl}  style={{ maxWidth: \"100%\" }}  className=\"crop-portion\"  />}\n            </CardBody>\n        </Card>\n        </Col>\n      </Row>\n      </Container>\n      </Fragment>\n\n  );\n}\n\nexport default Imagecropper;"],"mappings":"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"},"metadata":{},"sourceType":"module"}