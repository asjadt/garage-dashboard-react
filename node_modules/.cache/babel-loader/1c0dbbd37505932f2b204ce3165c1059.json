{"ast":null,"code":"import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { fetchEmailApi } from '../../api';\nimport { WATCH_EMAIL, WATCH_ALL_TYPE_EMAIL, GET_ALL_EMAIL_ASYN, GET_ALL_TYPE_ASYN } from '../../redux/actionTypes';\nimport { getAllEmails, getAllTypes } from '../../redux/email/action';\nfunction* fetchEmailAsyn() {\n  const emailData = yield call(fetchEmailApi);\n  yield put(getAllEmails(emailData.data));\n}\nfunction fetchgetAllTypesAsyn(_ref) {\n  let {\n    result\n  } = _ref;\n  return function* () {\n    yield put(getAllTypes(result));\n  }();\n}\nfunction getAllEmailsAsyn(_ref2) {\n  let {\n    usersList\n  } = _ref2;\n  return function* () {\n    yield put(getAllEmails(usersList));\n  }();\n}\nfunction getAllTypesAsyn(_ref3) {\n  let {\n    result\n  } = _ref3;\n  return function* () {\n    yield put(getAllTypes(result));\n  }();\n}\nexport function* WatcherEmailApp() {\n  yield takeLatest(WATCH_EMAIL, fetchEmailAsyn);\n  yield takeLatest(WATCH_ALL_TYPE_EMAIL, fetchgetAllTypesAsyn);\n  yield takeLatest(GET_ALL_EMAIL_ASYN, getAllEmailsAsyn);\n  yield takeLatest(GET_ALL_TYPE_ASYN, getAllTypesAsyn);\n}","map":{"version":3,"names":["call","put","takeLatest","fetchEmailApi","WATCH_EMAIL","WATCH_ALL_TYPE_EMAIL","GET_ALL_EMAIL_ASYN","GET_ALL_TYPE_ASYN","getAllEmails","getAllTypes","fetchEmailAsyn","emailData","data","fetchgetAllTypesAsyn","result","getAllEmailsAsyn","usersList","getAllTypesAsyn","WatcherEmailApp"],"sources":["/home/rifat/uk client/garage/garage-frontend-2/theme/src/redux/email/index.js"],"sourcesContent":["import {call,put,takeLatest} from \"redux-saga/effects\";\nimport {fetchEmailApi} from '../../api'\nimport {WATCH_EMAIL,WATCH_ALL_TYPE_EMAIL,GET_ALL_EMAIL_ASYN,GET_ALL_TYPE_ASYN} from '../../redux/actionTypes'\nimport {getAllEmails,getAllTypes} from '../../redux/email/action'\n\n\nfunction* fetchEmailAsyn() {\n    const emailData = yield call(fetchEmailApi);\n    yield put(getAllEmails(emailData.data));\n}\n\nfunction* fetchgetAllTypesAsyn({result}) {\n    yield put(getAllTypes(result)); \n}\n\nfunction* getAllEmailsAsyn({usersList}) {\n    yield put(getAllEmails(usersList));\n}\n\nfunction* getAllTypesAsyn({result}) {\n    yield put(getAllTypes(result));\n}\n\n\nexport function* WatcherEmailApp() {\n    yield takeLatest(WATCH_EMAIL,fetchEmailAsyn)\n    yield takeLatest(WATCH_ALL_TYPE_EMAIL,fetchgetAllTypesAsyn)\n    yield takeLatest(GET_ALL_EMAIL_ASYN,getAllEmailsAsyn)\n    yield takeLatest(GET_ALL_TYPE_ASYN,getAllTypesAsyn)\n}\n\n"],"mappings":"AAAA,SAAQA,IAAI,EAACC,GAAG,EAACC,UAAU,QAAO,oBAAoB;AACtD,SAAQC,aAAa,QAAO,WAAW;AACvC,SAAQC,WAAW,EAACC,oBAAoB,EAACC,kBAAkB,EAACC,iBAAiB,QAAO,yBAAyB;AAC7G,SAAQC,YAAY,EAACC,WAAW,QAAO,0BAA0B;AAGjE,UAAUC,cAAc,GAAG;EACvB,MAAMC,SAAS,GAAG,MAAMX,IAAI,CAACG,aAAa,CAAC;EAC3C,MAAMF,GAAG,CAACO,YAAY,CAACG,SAAS,CAACC,IAAI,CAAC,CAAC;AAC3C;AAEA,SAAUC,oBAAoB;EAAA,IAAC;IAACC;EAAM,CAAC;EAAA,oBAAE;IACrC,MAAMb,GAAG,CAACQ,WAAW,CAACK,MAAM,CAAC,CAAC;EAClC,CAAC;AAAA;AAED,SAAUC,gBAAgB;EAAA,IAAC;IAACC;EAAS,CAAC;EAAA,oBAAE;IACpC,MAAMf,GAAG,CAACO,YAAY,CAACQ,SAAS,CAAC,CAAC;EACtC,CAAC;AAAA;AAED,SAAUC,eAAe;EAAA,IAAC;IAACH;EAAM,CAAC;EAAA,oBAAE;IAChC,MAAMb,GAAG,CAACQ,WAAW,CAACK,MAAM,CAAC,CAAC;EAClC,CAAC;AAAA;AAGD,OAAO,UAAUI,eAAe,GAAG;EAC/B,MAAMhB,UAAU,CAACE,WAAW,EAACM,cAAc,CAAC;EAC5C,MAAMR,UAAU,CAACG,oBAAoB,EAACQ,oBAAoB,CAAC;EAC3D,MAAMX,UAAU,CAACI,kBAAkB,EAACS,gBAAgB,CAAC;EACrD,MAAMb,UAAU,CAACK,iBAAiB,EAACU,eAAe,CAAC;AACvD"},"metadata":{},"sourceType":"module"}