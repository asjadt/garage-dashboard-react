{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"onChange\"];\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nimport isEqual from 'fast-deep-equal';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TypeaheadManager from './TypeaheadManager';\nimport { caseSensitiveType, checkPropType, defaultInputValueType, defaultSelectedType, deprecated, highlightOnlyResultType, ignoreDiacriticsType, isRequiredForA11y, labelKeyType, optionType, selectedType } from '../propTypes';\nimport { addCustomOption, defaultFilterBy, getOptionLabel, getStringLabelKey, getUpdatedActiveIndex, getTruncatedOptions, head, isShown, isString, noop, uniqueId, validateSelectedPropChange } from '../utils';\nimport { DEFAULT_LABELKEY, DOWN, ESC, RETURN, TAB, UP } from '../constants';\nvar propTypes = {\n  /**\n   * Allows the creation of new selections on the fly. Note that any new items\n   * will be added to the list of selections, but not the list of original\n   * options unless handled as such by `Typeahead`'s parent.\n   *\n   * If a function is specified, it will be used to determine whether a custom\n   * option should be included. The return value should be true or false.\n   */\n  allowNew: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n  /**\n   * Autofocus the input when the component initially mounts.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * Whether or not filtering should be case-sensitive.\n   */\n  caseSensitive: checkPropType(PropTypes.bool, caseSensitiveType),\n  /**\n   * The initial value displayed in the text input.\n   */\n  defaultInputValue: checkPropType(PropTypes.string, defaultInputValueType),\n  /**\n   * Whether or not the menu is displayed upon initial render.\n   */\n  defaultOpen: PropTypes.bool,\n  /**\n   * Specify any pre-selected options. Use only if you want the component to\n   * be uncontrolled.\n   */\n  defaultSelected: checkPropType(PropTypes.arrayOf(optionType), defaultSelectedType),\n  /**\n   * Either an array of fields in `option` to search, or a custom filtering\n   * callback.\n   */\n  filterBy: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string.isRequired), PropTypes.func]),\n  /**\n   * Highlights the menu item if there is only one result and allows selecting\n   * that item by hitting enter. Does not work with `allowNew`.\n   */\n  highlightOnlyResult: checkPropType(PropTypes.bool, highlightOnlyResultType),\n  /**\n   * An html id attribute, required for assistive technologies such as screen\n   * readers.\n   */\n  id: checkPropType(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), isRequiredForA11y),\n  /**\n   * Whether the filter should ignore accents and other diacritical marks.\n   */\n  ignoreDiacritics: checkPropType(PropTypes.bool, ignoreDiacriticsType),\n  /**\n   * Specify the option key to use for display or a function returning the\n   * display string. By default, the selector will use the `label` key.\n   */\n  labelKey: checkPropType(PropTypes.oneOfType([PropTypes.string, PropTypes.func]), labelKeyType),\n  /**\n   * Maximum number of results to display by default. Mostly done for\n   * performance reasons so as not to render too many DOM nodes in the case of\n   * large data sets.\n   */\n  maxResults: PropTypes.number,\n  /**\n   * Number of input characters that must be entered before showing results.\n   */\n  minLength: PropTypes.number,\n  /**\n   * Whether or not multiple selections are allowed.\n   */\n  multiple: PropTypes.bool,\n  /**\n   * Invoked when the input is blurred. Receives an event.\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Invoked whenever items are added or removed. Receives an array of the\n   * selected options.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Invoked when the input is focused. Receives an event.\n   */\n  onFocus: PropTypes.func,\n  /**\n   * Invoked when the input value changes. Receives the string value of the\n   * input.\n   */\n  onInputChange: PropTypes.func,\n  /**\n   * Invoked when a key is pressed. Receives an event.\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * Invoked when menu visibility changes.\n   */\n  onMenuToggle: PropTypes.func,\n  /**\n   * Invoked when the pagination menu item is clicked. Receives an event.\n   */\n  onPaginate: PropTypes.func,\n  /**\n   * Whether or not the menu should be displayed. `undefined` allows the\n   * component to control visibility, while `true` and `false` show and hide\n   * the menu, respectively.\n   */\n  open: PropTypes.bool,\n  /**\n   * Full set of options, including pre-selected options. Must either be an\n   * array of objects (recommended) or strings.\n   */\n  options: PropTypes.arrayOf(optionType).isRequired,\n  /**\n   * Give user the ability to display additional results if the number of\n   * results exceeds `maxResults`.\n   */\n  paginate: PropTypes.bool,\n  /**\n   * The selected option(s) displayed in the input. Use this prop if you want\n   * to control the component via its parent.\n   */\n  selected: checkPropType(PropTypes.arrayOf(optionType), selectedType),\n  /**\n   * Allows selecting the hinted result by pressing enter.\n   */\n  selectHintOnEnter: deprecated(PropTypes.bool, 'Use the `shouldSelect` prop on the `Hint` component to define which ' + 'keystrokes can select the hint.')\n};\nvar defaultProps = {\n  allowNew: false,\n  autoFocus: false,\n  caseSensitive: false,\n  defaultInputValue: '',\n  defaultOpen: false,\n  defaultSelected: [],\n  filterBy: [],\n  highlightOnlyResult: false,\n  ignoreDiacritics: true,\n  labelKey: DEFAULT_LABELKEY,\n  maxResults: 100,\n  minLength: 0,\n  multiple: false,\n  onBlur: noop,\n  onFocus: noop,\n  onInputChange: noop,\n  onKeyDown: noop,\n  onMenuToggle: noop,\n  onPaginate: noop,\n  paginate: true\n};\nexport function getInitialState(props) {\n  var defaultInputValue = props.defaultInputValue,\n    defaultOpen = props.defaultOpen,\n    defaultSelected = props.defaultSelected,\n    maxResults = props.maxResults,\n    multiple = props.multiple;\n  var selected = props.selected ? props.selected.slice() : defaultSelected.slice();\n  var text = defaultInputValue;\n  if (!multiple && selected.length) {\n    // Set the text if an initial selection is passed in.\n    text = getOptionLabel(head(selected), props.labelKey);\n    if (selected.length > 1) {\n      // Limit to 1 selection in single-select mode.\n      selected = selected.slice(0, 1);\n    }\n  }\n  return {\n    activeIndex: -1,\n    activeItem: null,\n    initialItem: null,\n    isFocused: false,\n    selected: selected,\n    showMenu: defaultOpen,\n    shownResults: maxResults,\n    text: text\n  };\n}\nexport function clearTypeahead(state, props) {\n  return _objectSpread(_objectSpread({}, getInitialState(props)), {}, {\n    isFocused: state.isFocused,\n    selected: [],\n    text: ''\n  });\n}\nexport function hideMenu(state, props) {\n  var _getInitialState = getInitialState(props),\n    activeIndex = _getInitialState.activeIndex,\n    activeItem = _getInitialState.activeItem,\n    initialItem = _getInitialState.initialItem,\n    shownResults = _getInitialState.shownResults;\n  return {\n    activeIndex: activeIndex,\n    activeItem: activeItem,\n    initialItem: initialItem,\n    showMenu: false,\n    shownResults: shownResults\n  };\n}\nexport function toggleMenu(state, props) {\n  return state.showMenu ? hideMenu(state, props) : {\n    showMenu: true\n  };\n}\n/**\n * Manually trigger the input's change event.\n * https://stackoverflow.com/questions/23892547/what-is-the-best-way-to-trigger-onchange-event-in-react-js/46012210#46012210\n */\n\nfunction triggerInputChange(input, value) {\n  var inputValue = Object.getOwnPropertyDescriptor(window.HTMLInputElement.prototype, 'value');\n  inputValue && inputValue.set && inputValue.set.call(input, value);\n  var e = new Event('input', {\n    bubbles: true\n  });\n  input.dispatchEvent(e);\n}\nvar Typeahead = /*#__PURE__*/function (_React$Component) {\n  _inherits(Typeahead, _React$Component);\n  var _super = _createSuper(Typeahead);\n  function Typeahead() {\n    var _this;\n    _classCallCheck(this, Typeahead);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"state\", getInitialState(_this.props));\n    _defineProperty(_assertThisInitialized(_this), \"inputNode\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"isMenuShown\", false);\n    _defineProperty(_assertThisInitialized(_this), \"items\", []);\n    _defineProperty(_assertThisInitialized(_this), \"blur\", function () {\n      _this.inputNode && _this.inputNode.blur();\n      _this.hideMenu();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"clear\", function () {\n      _this.setState(clearTypeahead);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"focus\", function () {\n      _this.inputNode && _this.inputNode.focus();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getInput\", function () {\n      return _this.inputNode;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"inputRef\", function (inputNode) {\n      _this.inputNode = inputNode;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"setItem\", function (item, position) {\n      _this.items[position] = item;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"hideMenu\", function () {\n      _this.setState(hideMenu);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"toggleMenu\", function () {\n      _this.setState(toggleMenu);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_handleActiveIndexChange\", function (activeIndex) {\n      _this.setState(function (state) {\n        return {\n          activeIndex: activeIndex,\n          activeItem: activeIndex === -1 ? null : state.activeItem\n        };\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_handleActiveItemChange\", function (activeItem) {\n      // Don't update the active item if it hasn't changed.\n      if (!isEqual(activeItem, _this.state.activeItem)) {\n        _this.setState({\n          activeItem: activeItem\n        });\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_handleBlur\", function (e) {\n      e.persist();\n      _this.setState({\n        isFocused: false\n      }, function () {\n        return _this.props.onBlur(e);\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_handleChange\", function (selected) {\n      _this.props.onChange && _this.props.onChange(selected);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_handleClear\", function () {\n      _this.inputNode && triggerInputChange(_this.inputNode, '');\n      _this.setState(clearTypeahead, function () {\n        // Change handler is automatically triggered for single selections but\n        // not multi-selections.\n        if (_this.props.multiple) {\n          _this._handleChange([]);\n        }\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_handleFocus\", function (e) {\n      e.persist();\n      _this.setState({\n        isFocused: true,\n        showMenu: true\n      }, function () {\n        return _this.props.onFocus(e);\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_handleInitialItemChange\", function (initialItem) {\n      // Don't update the initial item if it hasn't changed.\n      if (!isEqual(initialItem, _this.state.initialItem)) {\n        _this.setState({\n          initialItem: initialItem\n        });\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_handleInputChange\", function (e) {\n      e.persist();\n      var text = e.currentTarget.value;\n      var _this$props = _this.props,\n        multiple = _this$props.multiple,\n        onInputChange = _this$props.onInputChange; // Clear selections when the input value changes in single-select mode.\n\n      var shouldClearSelections = _this.state.selected.length && !multiple;\n      _this.setState(function (state, props) {\n        var _getInitialState2 = getInitialState(props),\n          activeIndex = _getInitialState2.activeIndex,\n          activeItem = _getInitialState2.activeItem,\n          shownResults = _getInitialState2.shownResults;\n        return {\n          activeIndex: activeIndex,\n          activeItem: activeItem,\n          selected: shouldClearSelections ? [] : state.selected,\n          showMenu: true,\n          shownResults: shownResults,\n          text: text\n        };\n      }, function () {\n        onInputChange(text, e);\n        shouldClearSelections && _this._handleChange([]);\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_handleKeyDown\", function (e) {\n      var activeItem = _this.state.activeItem; // Skip most actions when the menu is hidden.\n\n      if (!_this.isMenuShown) {\n        if (e.keyCode === UP || e.keyCode === DOWN) {\n          _this.setState({\n            showMenu: true\n          });\n        }\n        _this.props.onKeyDown(e);\n        return;\n      }\n      switch (e.keyCode) {\n        case UP:\n        case DOWN:\n          // Prevent input cursor from going to the beginning when pressing up.\n          e.preventDefault();\n          _this._handleActiveIndexChange(getUpdatedActiveIndex(_this.state.activeIndex, e.keyCode, _this.items));\n          break;\n        case RETURN:\n          // Prevent form submission while menu is open.\n          e.preventDefault();\n          activeItem && _this._handleMenuItemSelect(activeItem, e);\n          break;\n        case ESC:\n        case TAB:\n          // ESC simply hides the menu. TAB will blur the input and move focus to\n          // the next item; hide the menu so it doesn't gain focus.\n          _this.hideMenu();\n          break;\n        default:\n          break;\n      }\n      _this.props.onKeyDown(e);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_handleMenuItemSelect\", function (option, e) {\n      if (option.paginationOption) {\n        _this._handlePaginate(e);\n      } else {\n        _this._handleSelectionAdd(option);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_handlePaginate\", function (e) {\n      e.persist();\n      _this.setState(function (state, props) {\n        return {\n          shownResults: state.shownResults + props.maxResults\n        };\n      }, function () {\n        return _this.props.onPaginate(e, _this.state.shownResults);\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_handleSelectionAdd\", function (option) {\n      var _this$props2 = _this.props,\n        multiple = _this$props2.multiple,\n        labelKey = _this$props2.labelKey;\n      var selected;\n      var selection = option;\n      var text; // Add a unique id to the custom selection. Avoid doing this in `render` so\n      // the id doesn't increment every time.\n\n      if (!isString(selection) && selection.customOption) {\n        selection = _objectSpread(_objectSpread({}, selection), {}, {\n          id: uniqueId('new-id-')\n        });\n      }\n      if (multiple) {\n        // If multiple selections are allowed, add the new selection to the\n        // existing selections.\n        selected = _this.state.selected.concat(selection);\n        text = '';\n      } else {\n        // If only a single selection is allowed, replace the existing selection\n        // with the new one.\n        selected = [selection];\n        text = getOptionLabel(selection, labelKey);\n      }\n      _this.setState(function (state, props) {\n        return _objectSpread(_objectSpread({}, hideMenu(state, props)), {}, {\n          initialItem: selection,\n          selected: selected,\n          text: text\n        });\n      }, function () {\n        return _this._handleChange(selected);\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_handleSelectionRemove\", function (selection) {\n      var selected = _this.state.selected.filter(function (option) {\n        return !isEqual(option, selection);\n      }); // Make sure the input stays focused after the item is removed.\n\n      _this.focus();\n      _this.setState(function (state, props) {\n        return _objectSpread(_objectSpread({}, hideMenu(state, props)), {}, {\n          selected: selected\n        });\n      }, function () {\n        return _this._handleChange(selected);\n      });\n    });\n    return _this;\n  }\n  _createClass(Typeahead, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.autoFocus && this.focus();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props3 = this.props,\n        labelKey = _this$props3.labelKey,\n        multiple = _this$props3.multiple,\n        selected = _this$props3.selected;\n      validateSelectedPropChange(selected, prevProps.selected); // Sync selections in state with those in props.\n\n      if (selected && !isEqual(selected, prevState.selected)) {\n        this.setState({\n          selected: selected\n        });\n        if (!multiple) {\n          this.setState({\n            text: selected.length ? getOptionLabel(head(selected), labelKey) : ''\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // Omit `onChange` so Flow doesn't complain.\n      var _this$props4 = this.props,\n        onChange = _this$props4.onChange,\n        otherProps = _objectWithoutProperties(_this$props4, _excluded);\n      var mergedPropsAndState = _objectSpread(_objectSpread({}, otherProps), this.state);\n      var filterBy = mergedPropsAndState.filterBy,\n        labelKey = mergedPropsAndState.labelKey,\n        options = mergedPropsAndState.options,\n        paginate = mergedPropsAndState.paginate,\n        shownResults = mergedPropsAndState.shownResults,\n        text = mergedPropsAndState.text;\n      this.isMenuShown = isShown(mergedPropsAndState);\n      this.items = []; // Reset items on re-render.\n\n      var results = [];\n      if (this.isMenuShown) {\n        var cb = typeof filterBy === 'function' ? filterBy : defaultFilterBy;\n        results = options.filter(function (option) {\n          return cb(option, mergedPropsAndState);\n        }); // This must come before results are truncated.\n\n        var shouldPaginate = paginate && results.length > shownResults; // Truncate results if necessary.\n\n        results = getTruncatedOptions(results, shownResults); // Add the custom option if necessary.\n\n        if (addCustomOption(results, mergedPropsAndState)) {\n          results.push(_defineProperty({\n            customOption: true\n          }, getStringLabelKey(labelKey), text));\n        } // Add the pagination item if necessary.\n\n        if (shouldPaginate) {\n          var _results$push2;\n          results.push((_results$push2 = {}, _defineProperty(_results$push2, getStringLabelKey(labelKey), ''), _defineProperty(_results$push2, \"paginationOption\", true), _results$push2));\n        }\n      }\n      return /*#__PURE__*/React.createElement(TypeaheadManager, _extends({}, mergedPropsAndState, {\n        hideMenu: this.hideMenu,\n        inputNode: this.inputNode,\n        inputRef: this.inputRef,\n        isMenuShown: this.isMenuShown,\n        onActiveItemChange: this._handleActiveItemChange,\n        onAdd: this._handleSelectionAdd,\n        onBlur: this._handleBlur,\n        onChange: this._handleInputChange,\n        onClear: this._handleClear,\n        onFocus: this._handleFocus,\n        onHide: this.hideMenu,\n        onInitialItemChange: this._handleInitialItemChange,\n        onKeyDown: this._handleKeyDown,\n        onMenuItemClick: this._handleMenuItemSelect,\n        onRemove: this._handleSelectionRemove,\n        results: results,\n        setItem: this.setItem,\n        toggleMenu: this.toggleMenu\n      }));\n    }\n  }]);\n  return Typeahead;\n}(React.Component);\n_defineProperty(Typeahead, \"propTypes\", propTypes);\n_defineProperty(Typeahead, \"defaultProps\", defaultProps);\nexport default Typeahead;","map":{"version":3,"names":["_extends","_objectWithoutProperties","_classCallCheck","_createClass","_assertThisInitialized","_inherits","_possibleConstructorReturn","_getPrototypeOf","_defineProperty","_excluded","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","_objectSpread","target","i","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","isEqual","PropTypes","React","TypeaheadManager","caseSensitiveType","checkPropType","defaultInputValueType","defaultSelectedType","deprecated","highlightOnlyResultType","ignoreDiacriticsType","isRequiredForA11y","labelKeyType","optionType","selectedType","addCustomOption","defaultFilterBy","getOptionLabel","getStringLabelKey","getUpdatedActiveIndex","getTruncatedOptions","head","isShown","isString","noop","uniqueId","validateSelectedPropChange","DEFAULT_LABELKEY","DOWN","ESC","RETURN","TAB","UP","propTypes","allowNew","oneOfType","bool","func","autoFocus","caseSensitive","defaultInputValue","string","defaultOpen","defaultSelected","arrayOf","filterBy","isRequired","highlightOnlyResult","id","number","ignoreDiacritics","labelKey","maxResults","minLength","multiple","onBlur","onChange","onFocus","onInputChange","onKeyDown","onMenuToggle","onPaginate","open","options","paginate","selected","selectHintOnEnter","defaultProps","getInitialState","props","slice","text","activeIndex","activeItem","initialItem","isFocused","showMenu","shownResults","clearTypeahead","state","hideMenu","_getInitialState","toggleMenu","triggerInputChange","input","value","inputValue","window","HTMLInputElement","set","Event","bubbles","dispatchEvent","Typeahead","_React$Component","_super","_this","_len","args","Array","_key","concat","inputNode","blur","setState","focus","item","position","items","persist","_handleChange","currentTarget","_this$props","shouldClearSelections","_getInitialState2","isMenuShown","keyCode","preventDefault","_handleActiveIndexChange","_handleMenuItemSelect","option","paginationOption","_handlePaginate","_handleSelectionAdd","_this$props2","selection","customOption","componentDidMount","componentDidUpdate","prevProps","prevState","_this$props3","render","_this$props4","otherProps","mergedPropsAndState","results","cb","shouldPaginate","_results$push2","createElement","inputRef","onActiveItemChange","_handleActiveItemChange","onAdd","_handleBlur","_handleInputChange","onClear","_handleClear","_handleFocus","onHide","onInitialItemChange","_handleInitialItemChange","_handleKeyDown","onMenuItemClick","onRemove","_handleSelectionRemove","setItem","Component"],"sources":["/home/rifat/uk client/garage/garage-frontend-2/theme/node_modules/react-bootstrap-typeahead/es/core/Typeahead.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"onChange\"];\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport isEqual from 'fast-deep-equal';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TypeaheadManager from './TypeaheadManager';\nimport { caseSensitiveType, checkPropType, defaultInputValueType, defaultSelectedType, deprecated, highlightOnlyResultType, ignoreDiacriticsType, isRequiredForA11y, labelKeyType, optionType, selectedType } from '../propTypes';\nimport { addCustomOption, defaultFilterBy, getOptionLabel, getStringLabelKey, getUpdatedActiveIndex, getTruncatedOptions, head, isShown, isString, noop, uniqueId, validateSelectedPropChange } from '../utils';\nimport { DEFAULT_LABELKEY, DOWN, ESC, RETURN, TAB, UP } from '../constants';\nvar propTypes = {\n  /**\n   * Allows the creation of new selections on the fly. Note that any new items\n   * will be added to the list of selections, but not the list of original\n   * options unless handled as such by `Typeahead`'s parent.\n   *\n   * If a function is specified, it will be used to determine whether a custom\n   * option should be included. The return value should be true or false.\n   */\n  allowNew: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n\n  /**\n   * Autofocus the input when the component initially mounts.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Whether or not filtering should be case-sensitive.\n   */\n  caseSensitive: checkPropType(PropTypes.bool, caseSensitiveType),\n\n  /**\n   * The initial value displayed in the text input.\n   */\n  defaultInputValue: checkPropType(PropTypes.string, defaultInputValueType),\n\n  /**\n   * Whether or not the menu is displayed upon initial render.\n   */\n  defaultOpen: PropTypes.bool,\n\n  /**\n   * Specify any pre-selected options. Use only if you want the component to\n   * be uncontrolled.\n   */\n  defaultSelected: checkPropType(PropTypes.arrayOf(optionType), defaultSelectedType),\n\n  /**\n   * Either an array of fields in `option` to search, or a custom filtering\n   * callback.\n   */\n  filterBy: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string.isRequired), PropTypes.func]),\n\n  /**\n   * Highlights the menu item if there is only one result and allows selecting\n   * that item by hitting enter. Does not work with `allowNew`.\n   */\n  highlightOnlyResult: checkPropType(PropTypes.bool, highlightOnlyResultType),\n\n  /**\n   * An html id attribute, required for assistive technologies such as screen\n   * readers.\n   */\n  id: checkPropType(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), isRequiredForA11y),\n\n  /**\n   * Whether the filter should ignore accents and other diacritical marks.\n   */\n  ignoreDiacritics: checkPropType(PropTypes.bool, ignoreDiacriticsType),\n\n  /**\n   * Specify the option key to use for display or a function returning the\n   * display string. By default, the selector will use the `label` key.\n   */\n  labelKey: checkPropType(PropTypes.oneOfType([PropTypes.string, PropTypes.func]), labelKeyType),\n\n  /**\n   * Maximum number of results to display by default. Mostly done for\n   * performance reasons so as not to render too many DOM nodes in the case of\n   * large data sets.\n   */\n  maxResults: PropTypes.number,\n\n  /**\n   * Number of input characters that must be entered before showing results.\n   */\n  minLength: PropTypes.number,\n\n  /**\n   * Whether or not multiple selections are allowed.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Invoked when the input is blurred. Receives an event.\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Invoked whenever items are added or removed. Receives an array of the\n   * selected options.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Invoked when the input is focused. Receives an event.\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Invoked when the input value changes. Receives the string value of the\n   * input.\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Invoked when a key is pressed. Receives an event.\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * Invoked when menu visibility changes.\n   */\n  onMenuToggle: PropTypes.func,\n\n  /**\n   * Invoked when the pagination menu item is clicked. Receives an event.\n   */\n  onPaginate: PropTypes.func,\n\n  /**\n   * Whether or not the menu should be displayed. `undefined` allows the\n   * component to control visibility, while `true` and `false` show and hide\n   * the menu, respectively.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Full set of options, including pre-selected options. Must either be an\n   * array of objects (recommended) or strings.\n   */\n  options: PropTypes.arrayOf(optionType).isRequired,\n\n  /**\n   * Give user the ability to display additional results if the number of\n   * results exceeds `maxResults`.\n   */\n  paginate: PropTypes.bool,\n\n  /**\n   * The selected option(s) displayed in the input. Use this prop if you want\n   * to control the component via its parent.\n   */\n  selected: checkPropType(PropTypes.arrayOf(optionType), selectedType),\n\n  /**\n   * Allows selecting the hinted result by pressing enter.\n   */\n  selectHintOnEnter: deprecated(PropTypes.bool, 'Use the `shouldSelect` prop on the `Hint` component to define which ' + 'keystrokes can select the hint.')\n};\nvar defaultProps = {\n  allowNew: false,\n  autoFocus: false,\n  caseSensitive: false,\n  defaultInputValue: '',\n  defaultOpen: false,\n  defaultSelected: [],\n  filterBy: [],\n  highlightOnlyResult: false,\n  ignoreDiacritics: true,\n  labelKey: DEFAULT_LABELKEY,\n  maxResults: 100,\n  minLength: 0,\n  multiple: false,\n  onBlur: noop,\n  onFocus: noop,\n  onInputChange: noop,\n  onKeyDown: noop,\n  onMenuToggle: noop,\n  onPaginate: noop,\n  paginate: true\n};\nexport function getInitialState(props) {\n  var defaultInputValue = props.defaultInputValue,\n      defaultOpen = props.defaultOpen,\n      defaultSelected = props.defaultSelected,\n      maxResults = props.maxResults,\n      multiple = props.multiple;\n  var selected = props.selected ? props.selected.slice() : defaultSelected.slice();\n  var text = defaultInputValue;\n\n  if (!multiple && selected.length) {\n    // Set the text if an initial selection is passed in.\n    text = getOptionLabel(head(selected), props.labelKey);\n\n    if (selected.length > 1) {\n      // Limit to 1 selection in single-select mode.\n      selected = selected.slice(0, 1);\n    }\n  }\n\n  return {\n    activeIndex: -1,\n    activeItem: null,\n    initialItem: null,\n    isFocused: false,\n    selected: selected,\n    showMenu: defaultOpen,\n    shownResults: maxResults,\n    text: text\n  };\n}\nexport function clearTypeahead(state, props) {\n  return _objectSpread(_objectSpread({}, getInitialState(props)), {}, {\n    isFocused: state.isFocused,\n    selected: [],\n    text: ''\n  });\n}\nexport function hideMenu(state, props) {\n  var _getInitialState = getInitialState(props),\n      activeIndex = _getInitialState.activeIndex,\n      activeItem = _getInitialState.activeItem,\n      initialItem = _getInitialState.initialItem,\n      shownResults = _getInitialState.shownResults;\n\n  return {\n    activeIndex: activeIndex,\n    activeItem: activeItem,\n    initialItem: initialItem,\n    showMenu: false,\n    shownResults: shownResults\n  };\n}\nexport function toggleMenu(state, props) {\n  return state.showMenu ? hideMenu(state, props) : {\n    showMenu: true\n  };\n}\n/**\n * Manually trigger the input's change event.\n * https://stackoverflow.com/questions/23892547/what-is-the-best-way-to-trigger-onchange-event-in-react-js/46012210#46012210\n */\n\nfunction triggerInputChange(input, value) {\n  var inputValue = Object.getOwnPropertyDescriptor(window.HTMLInputElement.prototype, 'value');\n  inputValue && inputValue.set && inputValue.set.call(input, value);\n  var e = new Event('input', {\n    bubbles: true\n  });\n  input.dispatchEvent(e);\n}\n\nvar Typeahead = /*#__PURE__*/function (_React$Component) {\n  _inherits(Typeahead, _React$Component);\n\n  var _super = _createSuper(Typeahead);\n\n  function Typeahead() {\n    var _this;\n\n    _classCallCheck(this, Typeahead);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", getInitialState(_this.props));\n\n    _defineProperty(_assertThisInitialized(_this), \"inputNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"isMenuShown\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"items\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"blur\", function () {\n      _this.inputNode && _this.inputNode.blur();\n\n      _this.hideMenu();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clear\", function () {\n      _this.setState(clearTypeahead);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"focus\", function () {\n      _this.inputNode && _this.inputNode.focus();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getInput\", function () {\n      return _this.inputNode;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"inputRef\", function (inputNode) {\n      _this.inputNode = inputNode;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setItem\", function (item, position) {\n      _this.items[position] = item;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hideMenu\", function () {\n      _this.setState(hideMenu);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleMenu\", function () {\n      _this.setState(toggleMenu);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleActiveIndexChange\", function (activeIndex) {\n      _this.setState(function (state) {\n        return {\n          activeIndex: activeIndex,\n          activeItem: activeIndex === -1 ? null : state.activeItem\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleActiveItemChange\", function (activeItem) {\n      // Don't update the active item if it hasn't changed.\n      if (!isEqual(activeItem, _this.state.activeItem)) {\n        _this.setState({\n          activeItem: activeItem\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleBlur\", function (e) {\n      e.persist();\n\n      _this.setState({\n        isFocused: false\n      }, function () {\n        return _this.props.onBlur(e);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleChange\", function (selected) {\n      _this.props.onChange && _this.props.onChange(selected);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleClear\", function () {\n      _this.inputNode && triggerInputChange(_this.inputNode, '');\n\n      _this.setState(clearTypeahead, function () {\n        // Change handler is automatically triggered for single selections but\n        // not multi-selections.\n        if (_this.props.multiple) {\n          _this._handleChange([]);\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleFocus\", function (e) {\n      e.persist();\n\n      _this.setState({\n        isFocused: true,\n        showMenu: true\n      }, function () {\n        return _this.props.onFocus(e);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleInitialItemChange\", function (initialItem) {\n      // Don't update the initial item if it hasn't changed.\n      if (!isEqual(initialItem, _this.state.initialItem)) {\n        _this.setState({\n          initialItem: initialItem\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleInputChange\", function (e) {\n      e.persist();\n      var text = e.currentTarget.value;\n      var _this$props = _this.props,\n          multiple = _this$props.multiple,\n          onInputChange = _this$props.onInputChange; // Clear selections when the input value changes in single-select mode.\n\n      var shouldClearSelections = _this.state.selected.length && !multiple;\n\n      _this.setState(function (state, props) {\n        var _getInitialState2 = getInitialState(props),\n            activeIndex = _getInitialState2.activeIndex,\n            activeItem = _getInitialState2.activeItem,\n            shownResults = _getInitialState2.shownResults;\n\n        return {\n          activeIndex: activeIndex,\n          activeItem: activeItem,\n          selected: shouldClearSelections ? [] : state.selected,\n          showMenu: true,\n          shownResults: shownResults,\n          text: text\n        };\n      }, function () {\n        onInputChange(text, e);\n        shouldClearSelections && _this._handleChange([]);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleKeyDown\", function (e) {\n      var activeItem = _this.state.activeItem; // Skip most actions when the menu is hidden.\n\n      if (!_this.isMenuShown) {\n        if (e.keyCode === UP || e.keyCode === DOWN) {\n          _this.setState({\n            showMenu: true\n          });\n        }\n\n        _this.props.onKeyDown(e);\n\n        return;\n      }\n\n      switch (e.keyCode) {\n        case UP:\n        case DOWN:\n          // Prevent input cursor from going to the beginning when pressing up.\n          e.preventDefault();\n\n          _this._handleActiveIndexChange(getUpdatedActiveIndex(_this.state.activeIndex, e.keyCode, _this.items));\n\n          break;\n\n        case RETURN:\n          // Prevent form submission while menu is open.\n          e.preventDefault();\n          activeItem && _this._handleMenuItemSelect(activeItem, e);\n          break;\n\n        case ESC:\n        case TAB:\n          // ESC simply hides the menu. TAB will blur the input and move focus to\n          // the next item; hide the menu so it doesn't gain focus.\n          _this.hideMenu();\n\n          break;\n\n        default:\n          break;\n      }\n\n      _this.props.onKeyDown(e);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleMenuItemSelect\", function (option, e) {\n      if (option.paginationOption) {\n        _this._handlePaginate(e);\n      } else {\n        _this._handleSelectionAdd(option);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handlePaginate\", function (e) {\n      e.persist();\n\n      _this.setState(function (state, props) {\n        return {\n          shownResults: state.shownResults + props.maxResults\n        };\n      }, function () {\n        return _this.props.onPaginate(e, _this.state.shownResults);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleSelectionAdd\", function (option) {\n      var _this$props2 = _this.props,\n          multiple = _this$props2.multiple,\n          labelKey = _this$props2.labelKey;\n      var selected;\n      var selection = option;\n      var text; // Add a unique id to the custom selection. Avoid doing this in `render` so\n      // the id doesn't increment every time.\n\n      if (!isString(selection) && selection.customOption) {\n        selection = _objectSpread(_objectSpread({}, selection), {}, {\n          id: uniqueId('new-id-')\n        });\n      }\n\n      if (multiple) {\n        // If multiple selections are allowed, add the new selection to the\n        // existing selections.\n        selected = _this.state.selected.concat(selection);\n        text = '';\n      } else {\n        // If only a single selection is allowed, replace the existing selection\n        // with the new one.\n        selected = [selection];\n        text = getOptionLabel(selection, labelKey);\n      }\n\n      _this.setState(function (state, props) {\n        return _objectSpread(_objectSpread({}, hideMenu(state, props)), {}, {\n          initialItem: selection,\n          selected: selected,\n          text: text\n        });\n      }, function () {\n        return _this._handleChange(selected);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleSelectionRemove\", function (selection) {\n      var selected = _this.state.selected.filter(function (option) {\n        return !isEqual(option, selection);\n      }); // Make sure the input stays focused after the item is removed.\n\n\n      _this.focus();\n\n      _this.setState(function (state, props) {\n        return _objectSpread(_objectSpread({}, hideMenu(state, props)), {}, {\n          selected: selected\n        });\n      }, function () {\n        return _this._handleChange(selected);\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Typeahead, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.autoFocus && this.focus();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props3 = this.props,\n          labelKey = _this$props3.labelKey,\n          multiple = _this$props3.multiple,\n          selected = _this$props3.selected;\n      validateSelectedPropChange(selected, prevProps.selected); // Sync selections in state with those in props.\n\n      if (selected && !isEqual(selected, prevState.selected)) {\n        this.setState({\n          selected: selected\n        });\n\n        if (!multiple) {\n          this.setState({\n            text: selected.length ? getOptionLabel(head(selected), labelKey) : ''\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // Omit `onChange` so Flow doesn't complain.\n      var _this$props4 = this.props,\n          onChange = _this$props4.onChange,\n          otherProps = _objectWithoutProperties(_this$props4, _excluded);\n\n      var mergedPropsAndState = _objectSpread(_objectSpread({}, otherProps), this.state);\n\n      var filterBy = mergedPropsAndState.filterBy,\n          labelKey = mergedPropsAndState.labelKey,\n          options = mergedPropsAndState.options,\n          paginate = mergedPropsAndState.paginate,\n          shownResults = mergedPropsAndState.shownResults,\n          text = mergedPropsAndState.text;\n      this.isMenuShown = isShown(mergedPropsAndState);\n      this.items = []; // Reset items on re-render.\n\n      var results = [];\n\n      if (this.isMenuShown) {\n        var cb = typeof filterBy === 'function' ? filterBy : defaultFilterBy;\n        results = options.filter(function (option) {\n          return cb(option, mergedPropsAndState);\n        }); // This must come before results are truncated.\n\n        var shouldPaginate = paginate && results.length > shownResults; // Truncate results if necessary.\n\n        results = getTruncatedOptions(results, shownResults); // Add the custom option if necessary.\n\n        if (addCustomOption(results, mergedPropsAndState)) {\n          results.push(_defineProperty({\n            customOption: true\n          }, getStringLabelKey(labelKey), text));\n        } // Add the pagination item if necessary.\n\n\n        if (shouldPaginate) {\n          var _results$push2;\n\n          results.push((_results$push2 = {}, _defineProperty(_results$push2, getStringLabelKey(labelKey), ''), _defineProperty(_results$push2, \"paginationOption\", true), _results$push2));\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(TypeaheadManager, _extends({}, mergedPropsAndState, {\n        hideMenu: this.hideMenu,\n        inputNode: this.inputNode,\n        inputRef: this.inputRef,\n        isMenuShown: this.isMenuShown,\n        onActiveItemChange: this._handleActiveItemChange,\n        onAdd: this._handleSelectionAdd,\n        onBlur: this._handleBlur,\n        onChange: this._handleInputChange,\n        onClear: this._handleClear,\n        onFocus: this._handleFocus,\n        onHide: this.hideMenu,\n        onInitialItemChange: this._handleInitialItemChange,\n        onKeyDown: this._handleKeyDown,\n        onMenuItemClick: this._handleMenuItemSelect,\n        onRemove: this._handleSelectionRemove,\n        results: results,\n        setItem: this.setItem,\n        toggleMenu: this.toggleMenu\n      }));\n    }\n  }]);\n\n  return Typeahead;\n}(React.Component);\n\n_defineProperty(Typeahead, \"propTypes\", propTypes);\n\n_defineProperty(Typeahead, \"defaultProps\", defaultProps);\n\nexport default Typeahead;"],"mappings":"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"},"metadata":{},"sourceType":"module"}