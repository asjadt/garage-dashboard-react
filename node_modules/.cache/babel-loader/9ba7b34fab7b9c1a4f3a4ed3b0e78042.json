{"ast":null,"code":"// Copyright (c) 2012 The Chromium Authors, Vladimirs. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * focus-outline-manager\n *\n * Watch users keyboard input and manage the focus outline visibility\n */\n\n/**\n * The class name to set on the document element.\n * @const\n */\nvar CLASS_NAME = 'focus-outline-hidden';\n\n/**\n * This class sets a CSS class name on the HTML element when a user presses the\n * tab key. It removes the class name when the user clicks anywhere.\n *\n * This allows you to write CSS like this:\n *\n * html.focus-outline-hidden *:focus {\n *     outline: none;\n * }\n *\n * And the outline will only be shown if the user uses the keyboard to get to it.\n *\n * @constructor\n */\nfunction FocusOutlineManager() {\n  var that = this;\n  document.addEventListener('keydown', function (e) {\n    that.focusByKeyboard = true;\n  }, true);\n  document.addEventListener('mousedown', function (e) {\n    that.focusByKeyboard = false;\n  }, true);\n  document.addEventListener('focus', function (event) {\n    // Update visibility only when focus is actually changed.\n    that.updateVisibility();\n  }, true);\n  document.addEventListener('focusout', function (event) {\n    window.setTimeout(function () {\n      if (!document.hasFocus()) {\n        that.focusByKeyboard = true;\n        that.updateVisibility();\n      }\n    }, 0);\n  });\n  this.updateVisibility();\n}\nFocusOutlineManager.prototype = {\n  /**\n   * Whether focus change is triggered by TAB key.\n   * @type {boolean}\n   * @private\n   */\n  focusByKeyboard: true,\n  updateVisibility: function () {\n    this.hidden = !this.focusByKeyboard;\n  },\n  /**\n   * Whether the focus outline should be hidden.\n   * @type {boolean}\n   */\n  set hidden(hidden) {\n    document.documentElement.classList.toggle(CLASS_NAME, hidden);\n  },\n  get hidden() {\n    return document.documentElement.classList.contains(CLASS_NAME);\n  }\n};\nnew FocusOutlineManager();","map":{"version":3,"names":["CLASS_NAME","FocusOutlineManager","that","document","addEventListener","e","focusByKeyboard","event","updateVisibility","window","setTimeout","hasFocus","prototype","hidden","documentElement","classList","toggle","contains"],"sources":["/home/rifat/uk client/garage/garage-frontend-2/theme/node_modules/focus-outline-manager/focus-outline-manager.js"],"sourcesContent":["// Copyright (c) 2012 The Chromium Authors, Vladimirs. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * focus-outline-manager\n *\n * Watch users keyboard input and manage the focus outline visibility\n */\n\n/**\n * The class name to set on the document element.\n * @const\n */\nvar CLASS_NAME = 'focus-outline-hidden';\n\n/**\n * This class sets a CSS class name on the HTML element when a user presses the\n * tab key. It removes the class name when the user clicks anywhere.\n *\n * This allows you to write CSS like this:\n *\n * html.focus-outline-hidden *:focus {\n *     outline: none;\n * }\n *\n * And the outline will only be shown if the user uses the keyboard to get to it.\n *\n * @constructor\n */\nfunction FocusOutlineManager () {\n    var that = this;\n\n    document.addEventListener('keydown', function (e) {\n        that.focusByKeyboard = true;\n    }, true);\n\n    document.addEventListener('mousedown', function (e) {\n        that.focusByKeyboard = false;\n    }, true);\n\n    document.addEventListener('focus', function (event) {\n        // Update visibility only when focus is actually changed.\n        that.updateVisibility();\n    }, true);\n\n    document.addEventListener('focusout', function (event) {\n        window.setTimeout(function () {\n            if (!document.hasFocus()) {\n                that.focusByKeyboard = true;\n                that.updateVisibility();\n            }\n        }, 0);\n    });\n\n    this.updateVisibility();\n}\n\nFocusOutlineManager.prototype = {\n    /**\n     * Whether focus change is triggered by TAB key.\n     * @type {boolean}\n     * @private\n     */\n    focusByKeyboard: true,\n\n    updateVisibility: function () {\n        this.hidden = !this.focusByKeyboard;\n    },\n\n    /**\n     * Whether the focus outline should be hidden.\n     * @type {boolean}\n     */\n    set hidden(hidden) {\n        document.documentElement.classList.toggle(CLASS_NAME, hidden);\n    },\n\n    get hidden() {\n        return document.documentElement.classList.contains(CLASS_NAME);\n    }\n};\n\nnew FocusOutlineManager();\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAIA,UAAU,GAAG,sBAAsB;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,mBAAmB,GAAI;EAC5B,IAAIC,IAAI,GAAG,IAAI;EAEfC,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAE,UAAUC,CAAC,EAAE;IAC9CH,IAAI,CAACI,eAAe,GAAG,IAAI;EAC/B,CAAC,EAAE,IAAI,CAAC;EAERH,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAE,UAAUC,CAAC,EAAE;IAChDH,IAAI,CAACI,eAAe,GAAG,KAAK;EAChC,CAAC,EAAE,IAAI,CAAC;EAERH,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAE,UAAUG,KAAK,EAAE;IAChD;IACAL,IAAI,CAACM,gBAAgB,EAAE;EAC3B,CAAC,EAAE,IAAI,CAAC;EAERL,QAAQ,CAACC,gBAAgB,CAAC,UAAU,EAAE,UAAUG,KAAK,EAAE;IACnDE,MAAM,CAACC,UAAU,CAAC,YAAY;MAC1B,IAAI,CAACP,QAAQ,CAACQ,QAAQ,EAAE,EAAE;QACtBT,IAAI,CAACI,eAAe,GAAG,IAAI;QAC3BJ,IAAI,CAACM,gBAAgB,EAAE;MAC3B;IACJ,CAAC,EAAE,CAAC,CAAC;EACT,CAAC,CAAC;EAEF,IAAI,CAACA,gBAAgB,EAAE;AAC3B;AAEAP,mBAAmB,CAACW,SAAS,GAAG;EAC5B;AACJ;AACA;AACA;AACA;EACIN,eAAe,EAAE,IAAI;EAErBE,gBAAgB,EAAE,YAAY;IAC1B,IAAI,CAACK,MAAM,GAAG,CAAC,IAAI,CAACP,eAAe;EACvC,CAAC;EAED;AACJ;AACA;AACA;EACI,IAAIO,MAAM,CAACA,MAAM,EAAE;IACfV,QAAQ,CAACW,eAAe,CAACC,SAAS,CAACC,MAAM,CAAChB,UAAU,EAAEa,MAAM,CAAC;EACjE,CAAC;EAED,IAAIA,MAAM,GAAG;IACT,OAAOV,QAAQ,CAACW,eAAe,CAACC,SAAS,CAACE,QAAQ,CAACjB,UAAU,CAAC;EAClE;AACJ,CAAC;AAED,IAAIC,mBAAmB,EAAE"},"metadata":{},"sourceType":"script"}