{"ast":null,"code":"var _jsxFileName = \"/home/rifat/uk client/garage/garage-frontend-2/theme/src/components/forms/form-widget/typeaheadComponent/typeahead-one.js\";\nimport React, { Fragment, useRef, useEffect, useState } from 'react';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport { ButtonToolbar, Button } from 'react-bootstrap';\nimport axios from 'axios';\nconst TypeaheadOne = () => {\n  const ref = useRef();\n  const [options, setOptions] = useState([]);\n  useEffect(() => {\n    axios.get(`${process.env.PUBLIC_URL}/api/typeaheadData.json`).then(res => setOptions(res.data));\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typeahead, {\n    id: \"public-typeahead\",\n    defaultSelected: options.slice(0, 4),\n    labelKey: \"name\",\n    multiple: true,\n    options: options,\n    placeholder: \"Choose a state...\",\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ButtonToolbar, {\n    style: {\n      marginTop: '10px',\n      margin: '4px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"m-2\",\n    onClick: () => ref.current.clear(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  }, \"Clear\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"m-2\",\n    onClick: () => ref.current.focus(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, \"Focus\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"m-2\",\n    onClick: () => {\n      ref.current.focus();\n      setTimeout(() => ref.current.blur(), 1000);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, \"Focus, then blur after 1 second\")));\n};\nexport default TypeaheadOne;","map":{"version":3,"names":["React","Fragment","useRef","useEffect","useState","Typeahead","ButtonToolbar","Button","axios","TypeaheadOne","ref","options","setOptions","get","process","env","PUBLIC_URL","then","res","data","slice","marginTop","margin","current","clear","focus","setTimeout","blur"],"sources":["/home/rifat/uk client/garage/garage-frontend-2/theme/src/components/forms/form-widget/typeaheadComponent/typeahead-one.js"],"sourcesContent":["import React, { Fragment,useRef,useEffect,useState } from 'react';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport {ButtonToolbar,Button} from 'react-bootstrap';\nimport axios from 'axios'\n\nconst TypeaheadOne = () =>  {\n        const ref = useRef();\n\n        const [options,setOptions] = useState([])\n\n        useEffect(() => {\n            axios.get(`${process.env.PUBLIC_URL}/api/typeaheadData.json`).then(res => setOptions(res.data))\n        },[])\n\n        return (\n          <Fragment>\n            <Typeahead\n              id=\"public-typeahead\"\n              defaultSelected={options.slice(0, 4)}\n              labelKey=\"name\"\n              multiple\n              options={options}\n              placeholder=\"Choose a state...\"\n              ref={ref}\n            />\n            <ButtonToolbar style={{marginTop: '10px',margin:'4px'}}>\n              <Button\n                className=\"m-2\"\n                onClick={() => ref.current.clear()}>\n                {\"Clear\"}\n              </Button>\n              <Button\n                className=\"m-2\"\n                onClick={() => ref.current.focus()}>\n                {\"Focus\"}\n              </Button>\n              <Button\n                className=\"m-2\" \n                onClick={() => {\n                  ref.current.focus();\n                  setTimeout(() => ref.current.blur(), 1000);\n                }}\n                >\n                {\"Focus, then blur after 1 second\"}\n              </Button>\n            </ButtonToolbar>\n          </Fragment>\n        );\n      }\n\nexport default TypeaheadOne;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAACC,MAAM,EAACC,SAAS,EAACC,QAAQ,QAAQ,OAAO;AACjE,SAASC,SAAS,QAAQ,2BAA2B;AACrD,SAAQC,aAAa,EAACC,MAAM,QAAO,iBAAiB;AACpD,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,MAAO;EACpB,MAAMC,GAAG,GAAGR,MAAM,EAAE;EAEpB,MAAM,CAACS,OAAO,EAACC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEzCD,SAAS,CAAC,MAAM;IACZK,KAAK,CAACK,GAAG,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,UAAW,yBAAwB,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIN,UAAU,CAACM,GAAG,CAACC,IAAI,CAAC,CAAC;EACnG,CAAC,EAAC,EAAE,CAAC;EAEL,oBACE,oBAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACP,oBAAC,SAAS;IACR,EAAE,EAAC,kBAAkB;IACrB,eAAe,EAAER,OAAO,CAACS,KAAK,CAAC,CAAC,EAAE,CAAC,CAAE;IACrC,QAAQ,EAAC,MAAM;IACf,QAAQ;IACR,OAAO,EAAET,OAAQ;IACjB,WAAW,EAAC,mBAAmB;IAC/B,GAAG,EAAED,GAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACT,eACF,oBAAC,aAAa;IAAC,KAAK,EAAE;MAACW,SAAS,EAAE,MAAM;MAACC,MAAM,EAAC;IAAK,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACrD,oBAAC,MAAM;IACL,SAAS,EAAC,KAAK;IACf,OAAO,EAAE,MAAMZ,GAAG,CAACa,OAAO,CAACC,KAAK,EAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAClC,OAAO,CACD,eACT,oBAAC,MAAM;IACL,SAAS,EAAC,KAAK;IACf,OAAO,EAAE,MAAMd,GAAG,CAACa,OAAO,CAACE,KAAK,EAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAClC,OAAO,CACD,eACT,oBAAC,MAAM;IACL,SAAS,EAAC,KAAK;IACf,OAAO,EAAE,MAAM;MACbf,GAAG,CAACa,OAAO,CAACE,KAAK,EAAE;MACnBC,UAAU,CAAC,MAAMhB,GAAG,CAACa,OAAO,CAACI,IAAI,EAAE,EAAE,IAAI,CAAC;IAC5C,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAED,iCAAiC,CAC3B,CACK,CACP;AAEf,CAAC;AAEP,eAAelB,YAAY"},"metadata":{},"sourceType":"module"}