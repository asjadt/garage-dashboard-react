{"ast":null,"code":"import { GET_TODO_LIST, GET_LIST_SUCCESS, ADD_NEW_ITEM, REMOVE_ITEM, MARK_ALL_ITEMS, SELECTED_ITEM } from '../actionTypes';\nconst INIT_STATE = {\n  allTodoItems: [],\n  todoItems: [],\n  loading: false\n};\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_TODO_LIST:\n      const allTodoItems = action.list.data;\n      return {\n        ...state,\n        loading: false,\n        allTodoItems: allTodoItems\n      };\n    case GET_LIST_SUCCESS:\n      const liveItems = action.payload.filter(item => item.status !== \"deleted\");\n      return {\n        ...state,\n        loading: true,\n        allTodoItems: liveItems,\n        todoItems: action.payload\n      };\n    case ADD_NEW_ITEM:\n      state.allTodoItems.push({\n        id: state.allTodoItems.length + 1,\n        title: action.payload.task\n      });\n      return {\n        ...state,\n        loading: true,\n        todoItems: state.allTodoItems,\n        allTodoItems: state.allTodoItems\n      };\n    case SELECTED_ITEM:\n      const updatedStatus = state.allTodoItems.reduce((cartAcc, item) => {\n        if (item.id === action.payload.itemId) {\n          cartAcc.push({\n            ...item,\n            status: action.payload.status\n          });\n        } else {\n          cartAcc.push(item);\n        }\n        return cartAcc;\n      }, []);\n      return {\n        ...state,\n        loading: true,\n        todoItems: updatedStatus,\n        allTodoItems: updatedStatus\n      };\n    case MARK_ALL_ITEMS:\n      const updateStatus = state.allTodoItems.reduce((cartAcc, item) => {\n        if (action.payload === false) {\n          cartAcc.push({\n            ...item,\n            status: 'completed'\n          });\n        } else {\n          cartAcc.push({\n            ...item,\n            status: 'pending'\n          });\n        }\n        return cartAcc;\n      }, []);\n      return {\n        ...state,\n        loading: true,\n        todoItems: updateStatus,\n        allTodoItems: updateStatus\n      };\n    case REMOVE_ITEM:\n      const updatedItems = state.allTodoItems.reduce((cartAcc, item) => {\n        if (item.id === action.payload) {\n          cartAcc.push({\n            ...item,\n            isStatus: 'deleted'\n          });\n        } else {\n          cartAcc.push(item);\n        }\n        return cartAcc;\n      }, []);\n      return {\n        ...state,\n        loading: true,\n        allTodoItems: updatedItems,\n        todoItems: updatedItems\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n});","map":{"version":3,"names":["GET_TODO_LIST","GET_LIST_SUCCESS","ADD_NEW_ITEM","REMOVE_ITEM","MARK_ALL_ITEMS","SELECTED_ITEM","INIT_STATE","allTodoItems","todoItems","loading","state","action","type","list","data","liveItems","payload","filter","item","status","push","id","length","title","task","updatedStatus","reduce","cartAcc","itemId","updateStatus","updatedItems","isStatus"],"sources":["/home/rifat/uk client/garage/garage-frontend-2/theme/src/redux/todo/reducer.js"],"sourcesContent":["import {\n    GET_TODO_LIST,\n    GET_LIST_SUCCESS,\n    ADD_NEW_ITEM,\n    REMOVE_ITEM,\n    MARK_ALL_ITEMS,\n    SELECTED_ITEM\n} from '../actionTypes'\n\nconst INIT_STATE = {\n    allTodoItems: [],\n    todoItems: [],\n    loading: false\n};\nexport default (state = INIT_STATE, action) => {\n    switch (action.type) {\n\n        case GET_TODO_LIST:\n            const allTodoItems = action.list.data;\n            return { ...state, loading: false, allTodoItems:allTodoItems };\n            \n\n        case GET_LIST_SUCCESS:\n            const liveItems = action.payload.filter((item) => item.status !== \"deleted\");\n            return { ...state, loading: true, allTodoItems: liveItems, todoItems: action.payload };\n\n        case ADD_NEW_ITEM:\n            state.allTodoItems.push({\n                id: state.allTodoItems.length + 1,\n                title: action.payload.task,\n            })\n            return { ...state, loading: true, todoItems: state.allTodoItems, allTodoItems: state.allTodoItems };\n\n        case SELECTED_ITEM:\n            const updatedStatus = state.allTodoItems.reduce((cartAcc, item) => {\n                if (item.id === action.payload.itemId) {\n                    cartAcc.push({ ...item, status: action.payload.status })\n                } else {\n                    cartAcc.push(item)\n                }\n                return cartAcc;\n            }, [])\n            return { ...state, loading: true, todoItems: updatedStatus, allTodoItems: updatedStatus };\n\n        case MARK_ALL_ITEMS:\n            const updateStatus = state.allTodoItems.reduce((cartAcc, item) => {\n                if (action.payload === false) {\n                    cartAcc.push({ ...item, status: 'completed' })\n                } else {\n                    cartAcc.push({ ...item, status: 'pending' })\n                }\n                return cartAcc;\n            }, [])\n            return { ...state, loading: true, todoItems: updateStatus, allTodoItems: updateStatus };\n\n        case REMOVE_ITEM:\n            const updatedItems = state.allTodoItems.reduce((cartAcc, item) => {\n                if (item.id === action.payload) {\n                    cartAcc.push({ ...item, isStatus: 'deleted' })\n                } else {\n                    cartAcc.push(item)\n                }\n                return cartAcc;\n            }, [])\n            return { ...state, loading: true, allTodoItems: updatedItems, todoItems: updatedItems };\n\n        default: return { ...state };\n    }\n}"],"mappings":"AAAA,SACIA,aAAa,EACbC,gBAAgB,EAChBC,YAAY,EACZC,WAAW,EACXC,cAAc,EACdC,aAAa,QACV,gBAAgB;AAEvB,MAAMC,UAAU,GAAG;EACfC,YAAY,EAAE,EAAE;EAChBC,SAAS,EAAE,EAAE;EACbC,OAAO,EAAE;AACb,CAAC;AACD,gBAAe,YAAgC;EAAA,IAA/BC,KAAK,uEAAGJ,UAAU;EAAA,IAAEK,MAAM;EACtC,QAAQA,MAAM,CAACC,IAAI;IAEf,KAAKZ,aAAa;MACd,MAAMO,YAAY,GAAGI,MAAM,CAACE,IAAI,CAACC,IAAI;MACrC,OAAO;QAAE,GAAGJ,KAAK;QAAED,OAAO,EAAE,KAAK;QAAEF,YAAY,EAACA;MAAa,CAAC;IAGlE,KAAKN,gBAAgB;MACjB,MAAMc,SAAS,GAAGJ,MAAM,CAACK,OAAO,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,MAAM,KAAK,SAAS,CAAC;MAC5E,OAAO;QAAE,GAAGT,KAAK;QAAED,OAAO,EAAE,IAAI;QAAEF,YAAY,EAAEQ,SAAS;QAAEP,SAAS,EAAEG,MAAM,CAACK;MAAQ,CAAC;IAE1F,KAAKd,YAAY;MACbQ,KAAK,CAACH,YAAY,CAACa,IAAI,CAAC;QACpBC,EAAE,EAAEX,KAAK,CAACH,YAAY,CAACe,MAAM,GAAG,CAAC;QACjCC,KAAK,EAAEZ,MAAM,CAACK,OAAO,CAACQ;MAC1B,CAAC,CAAC;MACF,OAAO;QAAE,GAAGd,KAAK;QAAED,OAAO,EAAE,IAAI;QAAED,SAAS,EAAEE,KAAK,CAACH,YAAY;QAAEA,YAAY,EAAEG,KAAK,CAACH;MAAa,CAAC;IAEvG,KAAKF,aAAa;MACd,MAAMoB,aAAa,GAAGf,KAAK,CAACH,YAAY,CAACmB,MAAM,CAAC,CAACC,OAAO,EAAET,IAAI,KAAK;QAC/D,IAAIA,IAAI,CAACG,EAAE,KAAKV,MAAM,CAACK,OAAO,CAACY,MAAM,EAAE;UACnCD,OAAO,CAACP,IAAI,CAAC;YAAE,GAAGF,IAAI;YAAEC,MAAM,EAAER,MAAM,CAACK,OAAO,CAACG;UAAO,CAAC,CAAC;QAC5D,CAAC,MAAM;UACHQ,OAAO,CAACP,IAAI,CAACF,IAAI,CAAC;QACtB;QACA,OAAOS,OAAO;MAClB,CAAC,EAAE,EAAE,CAAC;MACN,OAAO;QAAE,GAAGjB,KAAK;QAAED,OAAO,EAAE,IAAI;QAAED,SAAS,EAAEiB,aAAa;QAAElB,YAAY,EAAEkB;MAAc,CAAC;IAE7F,KAAKrB,cAAc;MACf,MAAMyB,YAAY,GAAGnB,KAAK,CAACH,YAAY,CAACmB,MAAM,CAAC,CAACC,OAAO,EAAET,IAAI,KAAK;QAC9D,IAAIP,MAAM,CAACK,OAAO,KAAK,KAAK,EAAE;UAC1BW,OAAO,CAACP,IAAI,CAAC;YAAE,GAAGF,IAAI;YAAEC,MAAM,EAAE;UAAY,CAAC,CAAC;QAClD,CAAC,MAAM;UACHQ,OAAO,CAACP,IAAI,CAAC;YAAE,GAAGF,IAAI;YAAEC,MAAM,EAAE;UAAU,CAAC,CAAC;QAChD;QACA,OAAOQ,OAAO;MAClB,CAAC,EAAE,EAAE,CAAC;MACN,OAAO;QAAE,GAAGjB,KAAK;QAAED,OAAO,EAAE,IAAI;QAAED,SAAS,EAAEqB,YAAY;QAAEtB,YAAY,EAAEsB;MAAa,CAAC;IAE3F,KAAK1B,WAAW;MACZ,MAAM2B,YAAY,GAAGpB,KAAK,CAACH,YAAY,CAACmB,MAAM,CAAC,CAACC,OAAO,EAAET,IAAI,KAAK;QAC9D,IAAIA,IAAI,CAACG,EAAE,KAAKV,MAAM,CAACK,OAAO,EAAE;UAC5BW,OAAO,CAACP,IAAI,CAAC;YAAE,GAAGF,IAAI;YAAEa,QAAQ,EAAE;UAAU,CAAC,CAAC;QAClD,CAAC,MAAM;UACHJ,OAAO,CAACP,IAAI,CAACF,IAAI,CAAC;QACtB;QACA,OAAOS,OAAO;MAClB,CAAC,EAAE,EAAE,CAAC;MACN,OAAO;QAAE,GAAGjB,KAAK;QAAED,OAAO,EAAE,IAAI;QAAEF,YAAY,EAAEuB,YAAY;QAAEtB,SAAS,EAAEsB;MAAa,CAAC;IAE3F;MAAS,OAAO;QAAE,GAAGpB;MAAM,CAAC;EAAC;AAErC,CAAC"},"metadata":{},"sourceType":"module"}