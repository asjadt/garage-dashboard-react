{"ast":null,"code":"var _jsxFileName = \"/home/rifat/uk client/garage/garage-frontend-2/theme/src/components/icons/Typicon.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport BreadCrumb from '../../layout/Breadcrumb';\nimport IconMarkUp from './Icon-markup';\nimport { Container, Row, Col, Card, CardHeader, CardBody } from 'reactstrap';\nimport { TypiconsIcons } from \"../../constant\";\nimport axios from 'axios';\nconst Typeicon = props => {\n  const [data, setData] = useState([]);\n  const [iTag, setiTag] = useState('');\n  const [icon, setIcon] = useState('');\n  useEffect(() => {\n    axios.get(`${process.env.PUBLIC_URL}/api/typ-icon-data.json`).then(res => setData(res.data));\n  }, []);\n  const getItag = tag => {\n    setiTag({\n      iTag: '<i className= \"' + tag + '\"></i>'\n    });\n    setIcon({\n      icon: '' + tag + ' fa-2x'\n    });\n  };\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BreadCrumb, {\n    parent: \"Home\",\n    subparent: \"Icons\",\n    title: \"Typicons Icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }\n  }, data.map((icons, index) => {\n    return /*#__PURE__*/React.createElement(Row, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"m-b-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, TypiconsIcons)), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"icon-lists\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }, icons.typ_icons.map((icon, i) => {\n      return /*#__PURE__*/React.createElement(Col, {\n        sm: \"6\",\n        lg: \"4\",\n        key: i,\n        onClick: e => getItag(icon),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: `${icon}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 37\n        }\n      }), \" \", icon);\n    }))))));\n  })), /*#__PURE__*/React.createElement(IconMarkUp, {\n    itag: iTag,\n    icons: icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }));\n};\nexport default Typeicon;","map":{"version":3,"names":["React","Fragment","useState","useEffect","BreadCrumb","IconMarkUp","Container","Row","Col","Card","CardHeader","CardBody","TypiconsIcons","axios","Typeicon","props","data","setData","iTag","setiTag","icon","setIcon","get","process","env","PUBLIC_URL","then","res","getItag","tag","map","icons","index","typ_icons","i","e"],"sources":["/home/rifat/uk client/garage/garage-frontend-2/theme/src/components/icons/Typicon.js"],"sourcesContent":["import React, { Fragment,useState,useEffect } from 'react';\nimport BreadCrumb from '../../layout/Breadcrumb'\nimport IconMarkUp from './Icon-markup';\nimport {Container,Row,Col,Card,CardHeader,CardBody} from 'reactstrap'\nimport {TypiconsIcons} from \"../../constant\";\nimport axios from 'axios'\nconst Typeicon = (props) =>  {\n\n    const [data,setData] = useState([])\n    const [iTag, setiTag] = useState('');\n    const [icon, setIcon] = useState('');\n    \n    useEffect(() => {\n      axios.get(`${process.env.PUBLIC_URL}/api/typ-icon-data.json`).then(res => setData(res.data))\n    },[])\n\n    const getItag = (tag) => {\n        setiTag({\n            iTag: '<i className= \"' + tag + '\"></i>',\n        })\n        setIcon({\n            icon : '' + tag + ' fa-2x'\n        })\n    }\n    return (\n        <Fragment>\n        <BreadCrumb parent=\"Home\" subparent=\"Icons\" title=\"Typicons Icon\"/>\n         <Container fluid={true}>\n            {\n            data.map((icons, index) => {\n            return (\n            <Row key={index}>\n              <Col sm=\"12\">\n                <Card>\n                  <CardHeader>\n                    <h5 className=\"m-b-0\">{TypiconsIcons}</h5>\n                  </CardHeader>\n                  <CardBody>\n                    <Row className=\"icon-lists\">\n                    {icons.typ_icons.map((icon, i) => {\n                            return (\n                                <Col sm=\"6\" lg=\"4\" key={i}  onClick={(e) => getItag(icon)}>\n                                    <i className={`${icon}`}></i> {icon}\n                                </Col>\n                            )\n                        })\n                        }\n                    </Row>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n             )\n            })\n         }\n        </Container> \n        <IconMarkUp itag={iTag} icons={icon} />   \n        </Fragment>\n    );\n}\n\nexport default Typeicon;"],"mappings":"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"},"metadata":{},"sourceType":"module"}